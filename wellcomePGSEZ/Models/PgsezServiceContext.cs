// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace wellcomePGSEZ.Models;

public partial class PgsezServiceContext : DbContext
{
    public PgsezServiceContext(DbContextOptions<PgsezServiceContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Departement> Departements { get; set; }

    public virtual DbSet<Model> Models { get; set; }

    public virtual DbSet<Phone> Phones { get; set; }

    public virtual DbSet<Software> Softwares { get; set; }

    public virtual DbSet<Types> Types { get; set; }

    public virtual DbSet<User> Users { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.UseCollation("Latin1_General_100_CI_AS_SC_UTF8");

        modelBuilder.Entity<Departement>(entity =>
        {
            entity.HasKey(e => e.DId);

            entity.Property(e => e.DId).HasColumnName("dId");
            entity.Property(e => e.DName)
                .IsRequired()
                .HasMaxLength(50)
                .HasColumnName("dName");
        });

        modelBuilder.Entity<Model>(entity =>
        {
            entity.HasKey(e => e.MId);

            entity.Property(e => e.MId)
                .ValueGeneratedOnAdd()
                .HasColumnName("mId");
            entity.Property(e => e.MBrand)
                .HasMaxLength(20)
                .HasColumnName("mBrand");
            entity.Property(e => e.MName)
                .IsRequired()
                .HasMaxLength(20)
                .HasColumnName("mName");
            entity.Property(e => e.MTypeId).HasColumnName("mTypeId");

            entity.HasOne(d => d.MType).WithMany(p => p.Models)
                .HasForeignKey(d => d.MTypeId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_Models_Type");
        });

        modelBuilder.Entity<Phone>(entity =>
        {
            entity.HasKey(e => e.PId).HasName("PK_phones");

            entity.Property(e => e.PId).HasColumnName("pId");
            entity.Property(e => e.PIpAddress)
                .HasMaxLength(16)
                .HasColumnName("pIpAddress");
            entity.Property(e => e.PModel).HasColumnName("pModel");
            entity.Property(e => e.PNumber)
                .HasMaxLength(4)
                .HasColumnName("pNumber");
            entity.Property(e => e.PProperty)
                .HasMaxLength(10)
                .HasColumnName("pProperty");
            entity.Property(e => e.PUser)
                .IsRequired()
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("pUser");

            entity.HasOne(d => d.PModelNavigation).WithMany(p => p.Phones)
                .HasForeignKey(d => d.PModel)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_Phones_Model");

            entity.HasOne(d => d.PUserNavigation).WithMany(p => p.Phones)
                .HasForeignKey(d => d.PUser)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_Phones_User");
        });

        modelBuilder.Entity<Software>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Software__3213E83F5F59A9CF");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.SDescription)
                .HasMaxLength(50)
                .HasColumnName("sDescription");
            entity.Property(e => e.SImageAddress)
                .HasMaxLength(100)
                .HasColumnName("sImageAddress");
            entity.Property(e => e.SLinkAddress)
                .HasMaxLength(100)
                .HasColumnName("sLinkAddress");
            entity.Property(e => e.SName)
                .IsRequired()
                .HasMaxLength(50)
                .HasColumnName("sName");
            entity.Property(e => e.SStatus).HasColumnName("sStatus");
            entity.Property(e => e.STag)
                .HasMaxLength(20)
                .HasColumnName("sTag");
            entity.Property(e => e.STypeId).HasColumnName("sTypeId");

            entity.HasOne(d => d.SType).WithMany(p => p.Softwares)
                .HasForeignKey(d => d.STypeId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_Software_Type");
        });

        modelBuilder.Entity<Types>(entity =>
        {
            entity.HasKey(e => e.TId);

            entity.Property(e => e.TId)
                .HasComment("شناسه نوع")
                .HasColumnName("tId");
            entity.Property(e => e.TName)
                .HasMaxLength(30)
                .HasColumnName("tName");
            entity.Property(e => e.TType).HasColumnName("tType");
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.HasKey(e => e.UId);

            entity.Property(e => e.UId)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("uId");
            entity.Property(e => e.UDepId).HasColumnName("uDepId");
            entity.Property(e => e.UFirstName)
                .IsRequired()
                .HasMaxLength(20)
                .HasColumnName("uFirstName");
            entity.Property(e => e.ULastName)
                .IsRequired()
                .HasMaxLength(40)
                .HasColumnName("uLastName");
            entity.Property(e => e.UPosition)
                .IsRequired()
                .HasMaxLength(50)
                .HasColumnName("uPosition");

            entity.HasOne(d => d.UDep).WithMany(p => p.Users)
                .HasForeignKey(d => d.UDepId)
                .HasConstraintName("fk_Users_Dep");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}